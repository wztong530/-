{"remainingRequest":"e:\\0_Tedu_wzt\\web第四阶段\\VUEUI\\vue_app_0000\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js!e:\\0_Tedu_wzt\\web第四阶段\\VUEUI\\vue_app_0000\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!e:\\0_Tedu_wzt\\web第四阶段\\VUEUI\\vue_app_0000\\vue_app_00\\src\\components\\tabbar\\ShopCart.vue?vue&type=script&lang=js","dependencies":[{"path":"e:\\0_Tedu_wzt\\web第四阶段\\VUEUI\\vue_app_0000\\vue_app_00\\src\\components\\tabbar\\ShopCart.vue","mtime":1555592173767},{"path":"e:\\0_Tedu_wzt\\web第四阶段\\VUEUI\\vue_app_0000\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"e:\\0_Tedu_wzt\\web第四阶段\\VUEUI\\vue_app_0000\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"e:\\0_Tedu_wzt\\web第四阶段\\VUEUI\\vue_app_0000\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport myFooter from \"@/components/Footer.vue\";\nexport default {\n  data: function data() {\n    return {\n      list: [],\n      allcb: false //全选状态 默认未选中\n\n    };\n  },\n  created: function created() {\n    this.loadMore();\n  },\n  methods: {\n    modifyItem: function modifyItem(e) {\n      // 功能:如果用户选中商品，将当前商品对应对象的cb=true\n      //     如果用户取消选中，将当前商品对应对象的cb=false\n      // 1.获取当前元素选中状态\n      var cb = e.target.checked; // 2.获取当前元素对应商品对象\n      //2.1获取当前元素的下标\n\n      var i = e.target.dataset.i; //2.1将数组下标对应对象的cb赋值为当前选中状态\n\n      this.list[i].cb = cb; // 3.修改商品对象cb属性\n      //4.修改全选状态 true false\n      //4.1创建变量count保存累加和\n\n      var count = 0; //4.2创建循环遍历所有元素\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.list[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var item = _step.value;\n\n          //4.3获取cb 如果值等于true count++\n          if (item.cb) {\n            count++;\n          }\n        } //4.4如果count个数与数组长度一致\n\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      if (count == this.list.length) {\n        //4.5将全选复选框选中\n        this.allcb = true;\n      } else {\n        //4.6否则清空全选复选框\n        this.allcb = false;\n      }\n    },\n    removeSelect: function removeSelect() {\n      var _this = this;\n\n      this.$messagebox.confirm(\"是否删除选中商品?\").then(function (action) {\n        //1.获取用户选中商品\n        // 1.1创建变量保存删除商品的ids=\"\"\n        var ids = \"\"; // 1.2创建循环遍历数组\n\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = _this.list[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var item = _step2.value;\n\n            // 1.3如果当前元素cb:true\n            if (item.cb) {\n              // 1.4获取当前元素的id 拼接字符串 ids+=\"1\"\n              ids += item.id + \",\";\n            }\n          } // -如果用户没有选中商品，停止删除操作\n\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n\n        if (ids.length == 0) {\n          _this.$toast(\"请选中您需要删除的商品！\");\n\n          return;\n        } // -如果用户选中多个商品 1,2, 去除后面的逗号\n\n\n        ids = ids.substr(0, ids.length - 1); // console.log(ids);\n        // return;\n        // //2.创建变量保存ids\n        // var ids=\"16,17\";\n        //3.创建url，发送ajax /delM\n\n        var url = \"http://127.0.0.1:3000/delM?ids=\" + ids;\n\n        _this.axios.get(url).then(function (res) {\n          //4.接收服务器返回结果\n          //5.提示 删除成功 删除失败\n          if (res.data.code == 1) {\n            _this.$toast(\"删除成功\");\n\n            _this.loadMore();\n          } else {\n            _this.$toast(\"删除失败\");\n          }\n        });\n      }).catch(function (result) {});\n    },\n    selectAll: function selectAll(e) {\n      //1.获取全选状态\n      var cb = e.target.checked; //2.遍历所有商品\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.list[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var item = _step3.value;\n          //3.将全选状态赋值给商品选中状态\n          item.cb = cb;\n        } //4.修改全选状态\n\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    },\n    removeItem: function removeItem(e) {\n      var _this2 = this;\n\n      this.$messagebox.confirm(\"是否删除?\").then(function (action) {\n        //如果用户选择确定\n        //功能:删除指定商品\n        //1.获取商品编号\n        var id = e.target.dataset.id; //2.创建变量url\n\n        var url = \"http://127.0.0.1:3000/removeCartItem?id=\" + id; //3.发送ajax请求\n\n        _this2.axios.get(url).then(function (res) {\n          //4.获取返回结果\n          //5.判断如果删除成功\n          if (res.data.code == 1) {\n            _this2.$toast(\"删除成功\"); //6.将当前商品对象删除\n            //数据库已经删除成功,网页内容显示新内容(删除后)\n\n\n            _this2.loadMore();\n          } else {\n            _this2.$toast(\"删除失败\");\n          }\n        });\n      }).catch(function (result) {//如果用户选择取消，不执行任何操作\n      });\n    },\n    loadMore: function loadMore() {\n      var _this3 = this;\n\n      // 1.创建变量url\n      var url = \"http://127.0.0.1:3000/getCart\"; // 2.发送ajax请求\n\n      this.axios.get(url).then(function (res) {\n        // 3.获取服务器返回的数据\n        //console.log(res.data.data);\n        // 4.保存list\n        // 为数组元素添加属性cb，cb表示复选框状态\n        var rows = res.data.data; //原数组\n        // 创建循环遍历数组并添加属性\n\n        var _iteratorNormalCompletion4 = true;\n        var _didIteratorError4 = false;\n        var _iteratorError4 = undefined;\n\n        try {\n          for (var _iterator4 = rows[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n            var item = _step4.value;\n            item.cb = false;\n          } // 将添加结果后的数组赋值给 list\n\n        } catch (err) {\n          _didIteratorError4 = true;\n          _iteratorError4 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n              _iterator4.return();\n            }\n          } finally {\n            if (_didIteratorError4) {\n              throw _iteratorError4;\n            }\n          }\n        }\n\n        _this3.list = rows; // this.list=res.data.data;\n        // console.log(this.list);\n      });\n    }\n  },\n  components: {\n    myFooter: myFooter\n  }\n};",{"version":3,"sources":["ShopCart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA,OAAA,QAAA,MAAA,yBAAA;AACA,eAAA;AACA,MADA,kBACA;AACA,WAAA;AACA,YAAA,EADA;AAEA,aAAA,KAFA,CAEA;;AAFA,KAAA;AAIA,GANA;AAOA,SAPA,qBAOA;AACA,SAAA,QAAA;AACA,GATA;AAUA,WAAA;AACA,cADA,sBACA,CADA,EACA;AACA;AACA;AACA;AACA,UAAA,KAAA,EAAA,MAAA,CAAA,OAAA,CAJA,CAKA;AACA;;AACA,UAAA,IAAA,EAAA,MAAA,CAAA,OAAA,CAAA,CAAA,CAPA,CAQA;;AACA,WAAA,IAAA,CAAA,CAAA,EAAA,EAAA,GAAA,EAAA,CATA,CAUA;AAEA;AACA;;AACA,UAAA,QAAA,CAAA,CAdA,CAeA;;AAfA;AAAA;AAAA;;AAAA;AAgBA,6BAAA,KAAA,IAAA,8HAAA;AAAA,cAAA,IAAA;;AACA;AACA,cAAA,KAAA,EAAA,EAAA;AACA;AACA;AACA,SArBA,CAsBA;;AAtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAuBA,UAAA,SAAA,KAAA,IAAA,CAAA,MAAA,EAAA;AACA;AACA,aAAA,KAAA,GAAA,IAAA;AACA,OAHA,MAGA;AACA;AACA,aAAA,KAAA,GAAA,KAAA;AACA;AACA,KA/BA;AAgCA,gBAhCA,0BAgCA;AAAA;;AACA,WAAA,WAAA,CAAA,OAAA,CAAA,WAAA,EACA,IADA,CACA,kBAAA;AACA;AACA;AACA,YAAA,MAAA,EAAA,CAHA,CAIA;;AAJA;AAAA;AAAA;;AAAA;AAKA,gCAAA,MAAA,IAAA,mIAAA;AAAA,gBAAA,IAAA;;AACA;AACA,gBAAA,KAAA,EAAA,EAAA;AACA;AACA,qBAAA,KAAA,EAAA,GAAA,GAAA;AACA;AACA,WAXA,CAYA;;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAaA,YAAA,IAAA,MAAA,IAAA,CAAA,EAAA;AACA,gBAAA,MAAA,CAAA,cAAA;;AACA;AACA,SAhBA,CAiBA;;;AACA,cAAA,IAAA,MAAA,CAAA,CAAA,EAAA,IAAA,MAAA,GAAA,CAAA,CAAA,CAlBA,CAmBA;AACA;AACA;AACA;AACA;;AACA,YAAA,MAAA,oCAAA,GAAA;;AACA,cAAA,KAAA,CAAA,GAAA,CAAA,GAAA,EAAA,IAAA,CAAA,eAAA;AACA;AACA;AACA,cAAA,IAAA,IAAA,CAAA,IAAA,IAAA,CAAA,EAAA;AACA,kBAAA,MAAA,CAAA,MAAA;;AACA,kBAAA,QAAA;AACA,WAHA,MAGA;AACA,kBAAA,MAAA,CAAA,MAAA;AACA;AACA,SATA;AAUA,OApCA,EAoCA,KApCA,CAoCA,kBAAA,CAAA,CApCA;AAqCA,KAtEA;AAuEA,aAvEA,qBAuEA,CAvEA,EAuEA;AACA;AACA,UAAA,KAAA,EAAA,MAAA,CAAA,OAAA,CAFA,CAGA;;AAHA;AAAA;AAAA;;AAAA;AAIA,8BAAA,KAAA,IAAA,mIAAA;AAAA,cAAA,IAAA;AACA;AACA,eAAA,EAAA,GAAA,EAAA;AACA,SAPA,CAQA;;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA,KAhFA;AAiFA,cAjFA,sBAiFA,CAjFA,EAiFA;AAAA;;AACA,WAAA,WAAA,CAAA,OAAA,CAAA,OAAA,EACA,IADA,CACA,kBAAA;AACA;AACA;AACA;AACA,YAAA,KAAA,EAAA,MAAA,CAAA,OAAA,CAAA,EAAA,CAJA,CAKA;;AACA,YAAA,MAAA,6CAAA,EAAA,CANA,CAOA;;AACA,eAAA,KAAA,CAAA,GAAA,CAAA,GAAA,EAAA,IAAA,CAAA,eAAA;AACA;AACA;AACA,cAAA,IAAA,IAAA,CAAA,IAAA,IAAA,CAAA,EAAA;AACA,mBAAA,MAAA,CAAA,MAAA,EADA,CAEA;AACA;;;AACA,mBAAA,QAAA;AACA,WALA,MAKA;AACA,mBAAA,MAAA,CAAA,MAAA;AACA;AACA,SAXA;AAYA,OArBA,EAqBA,KArBA,CAqBA,kBAAA,CACA;AACA,OAvBA;AAyBA,KA3GA;AA4GA,YA5GA,sBA4GA;AAAA;;AACA;AACA,UAAA,MAAA,+BAAA,CAFA,CAGA;;AACA,WAAA,KAAA,CAAA,GAAA,CAAA,GAAA,EAAA,IAAA,CAAA,eAAA;AACA;AACA;AACA;AACA;AACA,YAAA,OAAA,IAAA,IAAA,CAAA,IAAA,CALA,CAKA;AACA;;AANA;AAAA;AAAA;;AAAA;AAOA,gCAAA,IAAA,mIAAA;AAAA,gBAAA,IAAA;AACA,iBAAA,EAAA,GAAA,KAAA;AACA,WATA,CAUA;;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWA,eAAA,IAAA,GAAA,IAAA,CAXA,CAYA;AACA;AACA,OAdA;AAeA;AA/HA,GAVA;AA2IA,cAAA;AACA;AADA;AA3IA,CAAA","sourcesContent":["<template>\r\n<div class=\"app-shopcart\">\r\n  <mt-header fixed title=\"学子商城\"></mt-header>\r\n  <div class=\"mui-card\">\r\n    <div class=\"mui-card-header\">\r\n      全选<input type=\"checkbox\"  @change=\"selectAll\" :checked=\"allcb\">\r\n    </div>\r\n    <div class=\"mui-card-content\">\r\n      <div class=\"mui-card-content-inner\">\r\n        <ul class=\"mui-table-view\">\r\n          <li class=\"mui-table-view-cell mui-media\" v-for=\"(item,i) of list\" :key=\"item.id\">\r\n            <a href=\"javascript:;\">\r\n              <img class=\"mui-media-object mui-pull-left\" src=\"img/2.jpg\">\r\n              <div class=\"mui-media-body\">\r\n                <p class='mui-ellipsis'>\r\n                  <!-- 1.复选框 -->\r\n                  <input type=\"checkbox\" :checked=\"item.cb\" @change=\"modifyItem\" :data-i=\"i\">\r\n                  <!-- 2.商品名称 -->\r\n                  {{item.lname}}\r\n                  <!-- 3.商品价格 -->\r\n                  ¥{{item.price}}\r\n                  <!-- 4.删除按钮 -->\r\n                  <input type=\"button\" value=\"删除\" @click=\"removeItem\" :data-id=\"item.id\">\r\n                </p>\r\n              </div>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    <div class=\"mui-card-footer\">\r\n      <input type=\"button\" value=\"删除选中商品\" @click=\"removeSelect\">\r\n    </div>\r\n  </div>\r\n  <my-footer></my-footer>\r\n</div>\r\n</template>\r\n<script>\r\nimport myFooter from \"@/components/Footer.vue\"\r\nexport default {\r\n  data(){\r\n    return{\r\n      list:[],\r\n      allcb:false//全选状态 默认未选中\r\n    }\r\n  },\r\n  created(){\r\n    this.loadMore();\r\n  },\r\n  methods:{\r\n    modifyItem(e){\r\n      // 功能:如果用户选中商品，将当前商品对应对象的cb=true\r\n      //     如果用户取消选中，将当前商品对应对象的cb=false\r\n      // 1.获取当前元素选中状态\r\n      var cb=e.target.checked;\r\n      // 2.获取当前元素对应商品对象\r\n      //2.1获取当前元素的下标\r\n      var i=e.target.dataset.i;\r\n      //2.1将数组下标对应对象的cb赋值为当前选中状态\r\n      this.list[i].cb=cb;\r\n      // 3.修改商品对象cb属性\r\n\r\n      //4.修改全选状态 true false\r\n      //4.1创建变量count保存累加和\r\n      var count=0;\r\n      //4.2创建循环遍历所有元素\r\n      for(var item of this.list){\r\n        //4.3获取cb 如果值等于true count++\r\n        if(item.cb){\r\n          count++;\r\n        }\r\n      }\r\n      //4.4如果count个数与数组长度一致\r\n      if(count==this.list.length){\r\n        //4.5将全选复选框选中\r\n        this.allcb=true;\r\n      }else{\r\n        //4.6否则清空全选复选框\r\n        this.allcb=false;\r\n      }\r\n    },\r\n    removeSelect(){\r\n      this.$messagebox.confirm(\"是否删除选中商品?\")\r\n      .then(action=>{\r\n        //1.获取用户选中商品\r\n        // 1.1创建变量保存删除商品的ids=\"\"\r\n        var ids=\"\";\r\n        // 1.2创建循环遍历数组\r\n        for(var item of this.list){\r\n          // 1.3如果当前元素cb:true\r\n          if(item.cb){\r\n            // 1.4获取当前元素的id 拼接字符串 ids+=\"1\"\r\n            ids+=item.id+\",\";\r\n          }\r\n        }\r\n        // -如果用户没有选中商品，停止删除操作\r\n        if(ids.length==0){\r\n          this.$toast(\"请选中您需要删除的商品！\");\r\n          return;\r\n        }\r\n        // -如果用户选中多个商品 1,2, 去除后面的逗号\r\n        ids=ids.substr(0,ids.length-1);\r\n        // console.log(ids);\r\n        // return;\r\n        // //2.创建变量保存ids\r\n        // var ids=\"16,17\";\r\n        //3.创建url，发送ajax /delM\r\n        var url=\"http://127.0.0.1:3000/delM?ids=\"+ids;\r\n        this.axios.get(url).then(res=>{\r\n          //4.接收服务器返回结果\r\n          //5.提示 删除成功 删除失败\r\n          if(res.data.code==1){\r\n            this.$toast(\"删除成功\")\r\n            this.loadMore();\r\n          }else{\r\n            this.$toast(\"删除失败\")\r\n          }\r\n        })\r\n      }).catch(result=>{});\r\n    },\r\n    selectAll(e){\r\n      //1.获取全选状态\r\n      var cb=e.target.checked;\r\n      //2.遍历所有商品\r\n      for(var item of this.list){\r\n        //3.将全选状态赋值给商品选中状态\r\n        item.cb=cb;\r\n      }\r\n      //4.修改全选状态\r\n    },\r\n    removeItem(e){\r\n      this.$messagebox.confirm(\"是否删除?\")\r\n      .then(action=>{\r\n        //如果用户选择确定\r\n        //功能:删除指定商品\r\n        //1.获取商品编号\r\n        var id=e.target.dataset.id;\r\n        //2.创建变量url\r\n        var url=\"http://127.0.0.1:3000/removeCartItem?id=\"+id;\r\n        //3.发送ajax请求\r\n        this.axios.get(url).then(res=>{\r\n          //4.获取返回结果\r\n          //5.判断如果删除成功\r\n          if(res.data.code==1){\r\n            this.$toast(\"删除成功\");\r\n            //6.将当前商品对象删除\r\n            //数据库已经删除成功,网页内容显示新内容(删除后)\r\n            this.loadMore();\r\n          }else{\r\n            this.$toast(\"删除失败\");\r\n          }\r\n        })\r\n      }).catch(result=>{\r\n        //如果用户选择取消，不执行任何操作\r\n      })\r\n      \r\n    },\r\n    loadMore(){\r\n      // 1.创建变量url\r\n      var url=\"http://127.0.0.1:3000/getCart\";\r\n      // 2.发送ajax请求\r\n      this.axios.get(url).then(res=>{\r\n        // 3.获取服务器返回的数据\r\n        //console.log(res.data.data);\r\n        // 4.保存list\r\n        // 为数组元素添加属性cb，cb表示复选框状态\r\n        var rows=res.data.data;//原数组\r\n        // 创建循环遍历数组并添加属性\r\n        for(var item of rows){\r\n          item.cb=false;\r\n        }\r\n        // 将添加结果后的数组赋值给 list\r\n        this.list=rows;\r\n        // this.list=res.data.data;\r\n        // console.log(this.list);\r\n      })\r\n    }\r\n  },\r\n  components:{\r\n    myFooter\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n.app-shopcart{\r\n    padding-top:40px;/*留出header*/\r\n    padding-bottom:50px;/*留出tabbar*/\r\n    overflow-x:hidden;\r\n  }\r\n</style>\r\n"],"sourceRoot":"src\\components\\tabbar"}]}